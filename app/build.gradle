buildscript {
	repositories {
		google()
		mavenCentral()
		flatDir dirs: "${rootDir}/addopens/build/libs"
	}
	dependencies {
		classpath "com.example.classannotation:addopens:1.0"
	}
}

plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}

apply plugin: "addopens"

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':logger')
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Annotation Processor dependency
	annotationProcessor project(':annotation-processor')
	// Include annotation-processor as a compile-time dependency to access annotations
	implementation project(':annotation-processor')

	annotationProcessor files("libs/tools-1.5.0.jar")
	implementation files("libs/tools-1.5.0.jar")
}

tasks.withType(JavaCompile) {
	options.compilerArgs += [
			'--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
			'--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
			'--add-exports=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED'
	]
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	mainClass.set('com.example.classannotation.ClassannotationApplication')
}
